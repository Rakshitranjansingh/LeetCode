class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
       int i=0, j=0, count=0;
        int n=matrix.length;
        int m=matrix[0].length;
        ArrayList<Integer> ans= new ArrayList<>(n*m);

        while(ans.size()<n*m){
            for(; j<m-count; j++){
                ans.add(matrix[i][j]);           

            }
            if (ans.size()==n*m) break;
            j--;
            i++;
            for(; i<n-count; i++){
                ans.add(matrix[i][j]);
            }
            if (ans.size()==n*m) break;
            i--;
            j--;
            for(; j>=count; j--){                
                ans.add(matrix[i][j]);                
            }
            if (ans.size()==n*m) break;
            j++;
            i--;

            for(; i>count; i--){
                ans.add(matrix[i][j]);
            }
            if (ans.size()==n*m) break;
            i++;
            j++;
            count=count+1;

        }


     //   System.out.println(ans);
        
         return ans;
    }
}
