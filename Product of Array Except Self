class Solution {
    public int[] productExceptSelf(int[] nums) {
        int n = nums.length;
        int[] ans = new int[n];
        
        int extra=1;
        for(int i=0; i<n; i++){
            ans[i]=extra;
            extra=extra*nums[i];
        }
        
        extra=1;
        for(int i=n-1; i>=0; i--){
            ans[i]=extra*ans[i];
            extra=extra*nums[i];
        }
        
        return ans;
        
                    
            
            
        
    }
}
 
//below is the timeexceeding
//         int[] ans = new int[nums.length];
//         //finding zeros;
//         int count=0, index=0, prod=1;
//         for ( int i =0; i< nums.length; i++){
//                 if(nums[i]==0){
//                     count++;
//                     index=i;
//                 }
//             prod=prod*nums[i];
//         } 
        
//         //checking for zeros 
//         if(count==1){
//             ans[index]=product(nums, index);
//             return ans;
//         }else if(count >1){
//             return ans;
//         }else{
//             for(int i=0; i<nums.length; i++){
//                ans[i]=prod/nums[i];
//             }
//             return ans;
//         }
        
        
                 
        
          
//     }
    
    
    
//     public int product(int[] nums, int n){
        
//         int prod=1;
//         for ( int i =0; i< nums.length; i++){
                
//             if(i!=n){
//                 prod=prod*nums[i];
//                 }
//         }  
//         return prod;
//     }
// }
